A deadlock is a situation in an operating system where a set of processes are blocked because each process is holding a resource and 
waiting for another resource that is being held by some other process in the same set. In simple terms, it’s a circular waiting state where 
no process can proceed, leading to an indefinite halt in execution. Deadlocks are undesirable because they waste system resources and reduce throughput.


Necessary Conditions for Deadlock (Coffman’s Conditions)

For a deadlock to occur, all four conditions must hold simultaneously:

Mutual Exclusion – At least one resource must be held in a non-shareable mode; only one process can use the resource at a time.
Hold and Wait – A process is holding at least one resource and simultaneously waiting to acquire additional resources that are currently being held by 
other processes.
No Preemption – Resources cannot be forcibly taken away from a process; they can only be released voluntarily by the process holding them.
Circular Wait – A set of processes must exist in a circular chain, where each process is waiting for a resource held by the next process in the chain.